{"version":3,"file":"manifestpeek.entityaction-CIZsvaxk.js","sources":["../../umbraco.community.manifestpeek.client/src/EntityAction/manifestpeek.entityaction.ts"],"sourcesContent":["import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbEntityActionArgs, UmbEntityActionBase } from \"@umbraco-cms/backoffice/entity-action\";\r\nimport { UmbBackofficeExtensionRegistry, umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_CODE_EDITOR_MODAL, UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\r\n\r\nexport class ManifestPeekEntityAction extends UmbEntityActionBase<never> {\r\n\r\n    private _extensionRegistry: UmbBackofficeExtensionRegistry;\r\n    \r\n    private _modalManagerContext?: UmbModalManagerContext;\r\n\r\n    constructor(host: UmbControllerHost, args: UmbEntityActionArgs<never>) {\r\n        super(host, args);\r\n        this._extensionRegistry = umbExtensionsRegistry;\r\n        \r\n        // Fetch/consume the contexts & assign to the private fields\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n            this._modalManagerContext = instance;\r\n        });\r\n    }\r\n\r\n    async execute() {\r\n        console.log('args', this.args);\r\n\r\n        const extension = this._extensionRegistry.getByAlias(this.args.unique ?? '');\r\n        console.log('extension', extension); \r\n\r\n        const modal = this._modalManagerContext?.open(this, UMB_CODE_EDITOR_MODAL, {\r\n            data: {\r\n               content: JSON.stringify(extension, null, 4),\r\n               headline: 'view Extension Manifest',\r\n               language: 'json'\r\n            }\r\n        });\r\n\r\n        // This works as we don;t know what the manifest strongly typed object is we will need to pass this to a modal\r\n        // And then for each property on the object list it out\r\n        // Some could be objects so we would need to recurse\r\n\r\n        // Could use JSON string and print that out in the modal in some <code> block or something\r\n    }\r\n}\r\n\r\n\r\nexport { ManifestPeekEntityAction as api };"],"names":["ManifestPeekEntityAction","UmbEntityActionBase","host","args","umbExtensionsRegistry","UMB_MODAL_MANAGER_CONTEXT","instance","extension","_a","UMB_CODE_EDITOR_MODAL"],"mappings":";;;AAKO,MAAMA,UAAiCC,EAA2B;AAAA,EAMrE,YAAYC,GAAyBC,GAAkC;AACnE,UAAMD,GAAMC,CAAI,GAChB,KAAK,qBAAqBC,GAGrB,KAAA,eAAeC,GAA2B,CAACC,MAAa;AACzD,WAAK,uBAAuBA;AAAA,IAAA,CAC/B;AAAA,EACL;AAAA,EAEA,MAAM,UAAU;;AACJ,YAAA,IAAI,QAAQ,KAAK,IAAI;AAE7B,UAAMC,IAAY,KAAK,mBAAmB,WAAW,KAAK,KAAK,UAAU,EAAE;AACnE,YAAA,IAAI,aAAaA,CAAS,IAEpBC,IAAA,KAAK,yBAAL,QAAAA,EAA2B,KAAK,MAAMC,GAAuB;AAAA,MACvE,MAAM;AAAA,QACH,SAAS,KAAK,UAAUF,GAAW,MAAM,CAAC;AAAA,QAC1C,UAAU;AAAA,QACV,UAAU;AAAA,MACb;AAAA,IAAA;AAAA,EAQR;AACJ;"}